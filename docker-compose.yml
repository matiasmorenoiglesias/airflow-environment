version: "3"

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      retries: 5

  dbinit:
    image: apache/airflow:3.1.0
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    command: db migrate
    restart: "no"

  api:
    image: apache/airflow:3.1.0
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      dbinit:
        condition: service_completed_successfully
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
      - AIRFLOW__LOGGING__BASE_LOG_FOLDER=/opt/airflow/logs
      - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY}
      - AIRFLOW__WEBSERVER__SECRET_KEY=secret
      - AIRFLOW__CORE__MIN_FILE_PROCESS_INTERVAL=5
      - AIRFLOW__CORE__DAG_DIR_LIST_INTERVAL=30
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./config/airflow.cfg:/opt/airflow/airflow.cfg
      - ./config/airflow_local_settings.py:/opt/airflow/config/airflow_local_settings.py
    ports:
      - "8080:8080"
    command: api-server --apps core,execution
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/api/v2/monitor/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  scheduler:
    image: apache/airflow:3.1.0
    restart: always
    depends_on:
      api:
        condition: service_healthy
      dbinit:
        condition: service_completed_successfully
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
      - AIRFLOW__CORE__EXECUTION_API_SERVER_URL=http://api:8080/execution/

    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./config/airflow.cfg:/opt/airflow/airflow.cfg
      - ./config/airflow_local_settings.py:/opt/airflow/config/airflow_local_settings.py
    command: scheduler

  dag_processor:
    image: apache/airflow:3.1.0
    restart: always
    depends_on:
      api:
        condition: service_healthy
      dbinit:
        condition: service_completed_successfully
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
    command: dag-processor

  triggerer:
    image: apache/airflow:3.1.0
    restart: always
    depends_on:
      api:
        condition: service_healthy
      dbinit:
        condition: service_completed_successfully
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__EXECUTION_API_SERVER_URL=http://api:8080/execution/
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
    command: triggerer

volumes:
  postgres-db-volume:
